[{"C:\\Users\\jjong\\Desktop\\React\\client\\src\\index.js":"1","C:\\Users\\jjong\\Desktop\\React\\client\\src\\App.js":"2","C:\\Users\\jjong\\Desktop\\React\\client\\src\\reportWebVitals.js":"3","C:\\Users\\jjong\\Desktop\\React\\client\\src\\Reducer\\store.js":"4","C:\\Users\\jjong\\Desktop\\React\\client\\src\\Reducer\\userSlice.js":"5","C:\\Users\\jjong\\Desktop\\React\\client\\src\\Component\\Heading.js":"6","C:\\Users\\jjong\\Desktop\\React\\client\\src\\Component\\Post\\Edit.js":"7","C:\\Users\\jjong\\Desktop\\React\\client\\src\\Component\\Post\\Upload.js":"8","C:\\Users\\jjong\\Desktop\\React\\client\\src\\Component\\Post\\PostArea.js":"9","C:\\Users\\jjong\\Desktop\\React\\client\\src\\Component\\User\\Login.js":"10","C:\\Users\\jjong\\Desktop\\React\\client\\src\\Component\\User\\Register.js":"11","C:\\Users\\jjong\\Desktop\\React\\client\\src\\Component\\User\\MyPage.js":"12","C:\\Users\\jjong\\Desktop\\React\\client\\src\\Component\\Post\\List.js":"13","C:\\Users\\jjong\\Desktop\\React\\client\\src\\Component\\Post\\ImageUpload.js":"14","C:\\Users\\jjong\\Desktop\\React\\client\\src\\Style\\UploadCSS.js":"15","C:\\Users\\jjong\\Desktop\\React\\client\\src\\Style\\PostDetailCSS.js":"16","C:\\Users\\jjong\\Desktop\\React\\client\\src\\Style\\UserCSS.js":"17","C:\\Users\\jjong\\Desktop\\React\\client\\src\\Component\\Reple\\RepleArea.js":"18","C:\\Users\\jjong\\Desktop\\React\\client\\src\\Style\\ListCSS.js":"19","C:\\Users\\jjong\\Desktop\\React\\client\\src\\Style\\RepleCSS.js":"20","C:\\Users\\jjong\\Desktop\\React\\client\\src\\Component\\Reple\\RepleList.js":"21","C:\\Users\\jjong\\Desktop\\React\\client\\src\\Component\\Reple\\RepleUpload.js":"22","C:\\Users\\jjong\\Desktop\\React\\client\\src\\Component\\Reple\\RepleContent.js":"23","C:\\Users\\jjong\\Desktop\\React\\client\\src\\firebase.js":"24","C:\\Users\\jjong\\Desktop\\React\\client\\src\\Component\\Post\\Detail.js":"25","C:\\Users\\jjong\\Desktop\\React\\client\\src\\Style\\SearchPageCSS.js":"26","C:\\Users\\jjong\\Desktop\\React\\client\\src\\Component\\SearchPage.js":"27","C:\\Users\\jjong\\Desktop\\React\\client\\src\\Component\\HomePage.js":"28","C:\\Users\\jjong\\Desktop\\React\\client\\src\\Component\\Home\\BackgroundSlider.js":"29"},{"size":511,"mtime":1679134950270,"results":"30","hashOfConfig":"31"},{"size":1640,"mtime":1679020336524,"results":"32","hashOfConfig":"31"},{"size":362,"mtime":1678845624664,"results":"33","hashOfConfig":"31"},{"size":283,"mtime":1678846868994,"results":"34","hashOfConfig":"31"},{"size":880,"mtime":1678846870044,"results":"35","hashOfConfig":"31"},{"size":2522,"mtime":1679046591750,"results":"36","hashOfConfig":"31"},{"size":2960,"mtime":1678857275445,"results":"37","hashOfConfig":"31"},{"size":2175,"mtime":1679133212384,"results":"38","hashOfConfig":"31"},{"size":1239,"mtime":1678872636978,"results":"39","hashOfConfig":"31"},{"size":2044,"mtime":1678856155320,"results":"40","hashOfConfig":"31"},{"size":3657,"mtime":1679007201777,"results":"41","hashOfConfig":"31"},{"size":2338,"mtime":1678884301511,"results":"42","hashOfConfig":"31"},{"size":1340,"mtime":1678858771203,"results":"43","hashOfConfig":"31"},{"size":614,"mtime":1678854774134,"results":"44","hashOfConfig":"31"},{"size":1618,"mtime":1679045329955,"results":"45","hashOfConfig":"31"},{"size":1848,"mtime":1679045187069,"results":"46","hashOfConfig":"31"},{"size":1685,"mtime":1679045013934,"results":"47","hashOfConfig":"31"},{"size":495,"mtime":1678846901076,"results":"48","hashOfConfig":"31"},{"size":1233,"mtime":1679046251133,"results":"49","hashOfConfig":"31"},{"size":3022,"mtime":1679045022627,"results":"50","hashOfConfig":"31"},{"size":750,"mtime":1678846903053,"results":"51","hashOfConfig":"31"},{"size":1254,"mtime":1678856470603,"results":"52","hashOfConfig":"31"},{"size":4389,"mtime":1678858723302,"results":"53","hashOfConfig":"31"},{"size":656,"mtime":1678863505100,"results":"54","hashOfConfig":"31"},{"size":2381,"mtime":1679134131774,"results":"55","hashOfConfig":"31"},{"size":1568,"mtime":1679046017098,"results":"56","hashOfConfig":"31"},{"size":2978,"mtime":1679133583056,"results":"57","hashOfConfig":"31"},{"size":261,"mtime":1679042377799,"results":"58","hashOfConfig":"31"},{"size":2633,"mtime":1679136004323,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"15my73m",{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"63"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"63"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"63"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"63"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"63"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"63"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"63"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"63"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"63"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jjong\\Desktop\\React\\client\\src\\index.js",[],[],[],"C:\\Users\\jjong\\Desktop\\React\\client\\src\\App.js",["157","158"],[],"import React, { useEffect } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loginUser, clearUser } from \"./Reducer/userSlice.js\";\nimport firebase from \"./firebase.js\";\n\nimport HomePage from \"./Component/HomePage\";\n\nimport Heading from \"./Component/Heading\";\nimport SearchPage from \"./Component/SearchPage\";\n\nimport Upload from \"./Component/Post/Upload\";\nimport PostArea from \"./Component/Post/PostArea\";\nimport Edit from \"./Component/Post/Edit\";\n\nimport Login from \"./Component/User/Login\";\nimport Register from \"./Component/User/Register\";\nimport MyPage from \"./Component/User/MyPage\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.user);\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((userInfo) => {\n      if (userInfo !== null) {\n        dispatch(loginUser(userInfo.multiFactor.user));\n      } else {\n        dispatch(clearUser());\n      }\n      //\n    });\n  }, []);\n\n  return (\n    <>\n      <Heading />\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} /> \n        <Route path=\"/search\" element={<SearchPage />} />\n        {/*Post, Reple*/}\n        <Route path=\"/upload\" element={<Upload />} />\n        <Route path=\"/post/:postNum\" element={<PostArea />} />\n        <Route path=\"/edit/:postNum\" element={<Edit />} />\n\n        {/*User*/}\n        <Route path=\"/login\" element={<Login />} />\n        <Route path=\"/register\" element={<Register />} />\n        <Route path=\"/mypage\" element={<MyPage />} />\n\n        {/*\n\n        */}\n      </Routes>\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\jjong\\Desktop\\React\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\jjong\\Desktop\\React\\client\\src\\Reducer\\store.js",[],[],"C:\\Users\\jjong\\Desktop\\React\\client\\src\\Reducer\\userSlice.js",[],[],"C:\\Users\\jjong\\Desktop\\React\\client\\src\\Component\\Heading.js",[],[],"C:\\Users\\jjong\\Desktop\\React\\client\\src\\Component\\Post\\Edit.js",["159"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport ImageUpload from \"./ImageUpload.js\";\r\n\r\nimport {\r\n  UploadDiv,\r\n  UploadForm,\r\n  UploadButtonDiv,\r\n} from \"../../Style/UploadCSS.js\";\r\n\r\nfunction Edit() {\r\n  let params = useParams();\r\n  let navigate = useNavigate();\r\n\r\n  const [PostInfo, setPostInfo] = useState({});\r\n  const [Flag, setFlag] = useState(false);\r\n  const [Title, setTitle] = useState(\"\");\r\n  const [Content, setContent] = useState(\"\");\r\n  const [Image, setImage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let body = {\r\n      postNum: params.postNum,\r\n    };\r\n    axios\r\n      .post(\"/api/post/detail\", body)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          setPostInfo(response.data.post);\r\n          setFlag(true);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setTitle(PostInfo.title);\r\n    setContent(PostInfo.content);\r\n    setImage(PostInfo.image);\r\n  }, [PostInfo]);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (Title === \"\" || Content === \"\") {\r\n      return alert(\"Please fill in the content field.\");\r\n    }\r\n\r\n    let body = {\r\n      title: Title,\r\n      content: Content,\r\n      postNum: params.postNum,\r\n      image: Image,\r\n    };\r\n\r\n    axios\r\n      .post(\"/api/post/edit\", body)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          alert(\"Your post has been successfully edited.\");\r\n          navigate(`/post/${params.postNum}`);\r\n        } else {\r\n          alert(\"Your post failed to be edited.\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <UploadDiv>\r\n      {Flag && (\r\n        <UploadForm>\r\n          <label htmlFor=\"label\">Title</label>\r\n          <input\r\n            id=\"title\"\r\n            type=\"text\"\r\n            value={Title}\r\n            onChange={(e) => {\r\n              setTitle(e.currentTarget.value);\r\n            }}\r\n          />\r\n          <ImageUpload setImage={setImage} />\r\n          <label htmlFor=\"content\">Content</label>\r\n          <textarea\r\n            id=\"content\"\r\n            value={Content}\r\n            onChange={(e) => {\r\n              setContent(e.currentTarget.value);\r\n            }}\r\n          />\r\n          <UploadButtonDiv>\r\n            <button\r\n              className=\"cancel\"\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                navigate(-1);\r\n              }}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              onClick={(e) => {\r\n                onSubmit(e);\r\n              }}\r\n            >\r\n              Submit\r\n            </button>\r\n          </UploadButtonDiv>\r\n        </UploadForm>\r\n      )}\r\n    </UploadDiv>\r\n  );\r\n}\r\n\r\nexport default Edit;\r\n","C:\\Users\\jjong\\Desktop\\React\\client\\src\\Component\\Post\\Upload.js",["160"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ImageUpload from \"./ImageUpload.js\";\r\nimport {\r\n  UploadDiv,\r\n  UploadForm,\r\n  UploadButtonDiv,\r\n} from \"../../Style/UploadCSS.js\";\r\nimport axios from \"axios\";\r\n\r\nfunction Upload(props) {\r\n  const [Title, setTitle] = useState(\"\");\r\n  const [Content, setContent] = useState(\"\");\r\n  const [Image, setImage] = useState(\"\");\r\n\r\n  let navigate = useNavigate();\r\n  const user = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    if (user.isLoading && !user.accessToken) {\r\n      alert(\"You can use it after Log in.\");\r\n      navigate(\"/login\");\r\n    }\r\n  }, [user]);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (Title === \"\" || Content === \"\") {\r\n      return alert(\"Please fill in all fields.\");\r\n    }\r\n\r\n    let body = {\r\n      title: Title,\r\n      content: Content,\r\n      image: Image,\r\n      uid: user.uid,\r\n    };\r\n\r\n    axios\r\n      .post(\"/api/post/submit\", body)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          alert(\"Your post succeeded.\");\r\n          navigate(\"/search\");\r\n        } else {\r\n          alert(\"Your post failed.\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <UploadDiv>\r\n      <UploadForm>\r\n        <label htmlFor=\"label\">Title</label>\r\n        <input\r\n          id=\"title\"\r\n          type=\"text\"\r\n          value={Title}\r\n          onChange={(e) => {\r\n            setTitle(e.currentTarget.value);\r\n          }}\r\n        />\r\n        <ImageUpload setImage={setImage} />\r\n        <label htmlFor=\"content\">Content</label>\r\n        <textarea\r\n          id=\"content\"\r\n          value={Content}\r\n          onChange={(e) => {\r\n            setContent(e.currentTarget.value);\r\n          }}\r\n        />\r\n        <UploadButtonDiv>\r\n          <button\r\n            onClick={(e) => {\r\n              onSubmit(e);\r\n            }}\r\n          >\r\n            Submit\r\n          </button>\r\n        </UploadButtonDiv>\r\n      </UploadForm>\r\n    </UploadDiv>\r\n  );\r\n}\r\n\r\nexport default Upload;\r\n","C:\\Users\\jjong\\Desktop\\React\\client\\src\\Component\\Post\\PostArea.js",["161"],[],"import React, { useState, useEffect } from \"react\";\r\nimport Detail from \"./Detail\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport RepleArea from \"../Reple/RepleArea\";\r\n\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { SpinnerDiv } from \"../../Style/PostDetailCSS.js\";\r\n\r\nfunction PostArea() {\r\n  const [PostInfo, setPostInfo] = useState({});\r\n  const [Flag, setFlag] = useState(false);\r\n\r\n  let params = useParams();\r\n\r\n  useEffect(() => {\r\n    let body = {\r\n      postNum: params.postNum,\r\n    };\r\n    axios\r\n      .post(\"/api/post/detail\", body)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          setPostInfo(response.data.post);\r\n          setFlag(true);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {Flag ? (\r\n        <>\r\n          <Detail PostInfo={PostInfo} />\r\n          <RepleArea postId={PostInfo._id} />\r\n        </>\r\n      ) : (\r\n        <SpinnerDiv>\r\n          <Spinner animation=\"border\" role=\"status\">\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n          </Spinner>\r\n        </SpinnerDiv>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostArea;\r\n","C:\\Users\\jjong\\Desktop\\React\\client\\src\\Component\\User\\Login.js",["162","163"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { LoginDiv } from \"../../Style/UserCSS.js\";\r\n\r\nimport firebase from \"../../firebase.js\";\r\n\r\nfunction Login() {\r\n  const [Email, setEmail] = useState(\"\");\r\n  const [PW, setPW] = useState(\"\");\r\n  const [ErrorMsg, setErrorMsg] = useState(\"\");\r\n\r\n  const user = useSelector((state) => state.user);\r\n  let navigate = useNavigate();\r\n\r\n  const SingInFunc = async (e) => {\r\n    e.preventDefault();\r\n    if (!(Email && PW)) {\r\n      return alert(\"Please fill in all fields.\");\r\n    }\r\n    try {\r\n      await firebase.auth().signInWithEmailAndPassword(Email, PW);\r\n      navigate(\"/\");\r\n    } catch (error) {\r\n      console.log(error.code);\r\n      if (error.code === \"auth/user-not-found\") {\r\n        setErrorMsg(\"This email is not available\");\r\n      } else if (error.code === \"auth/wrong-password\") {\r\n        setErrorMsg(\"Passwords must match.\");\r\n      } else {\r\n        setErrorMsg(\"login failed\");\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user.accessToken) {\r\n      navigate(\"/\");\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setErrorMsg(\"\");\r\n    }, 5000);\r\n  }, [ErrorMsg]);\r\n\r\n  return (\r\n    <LoginDiv>\r\n      <form>\r\n        <label>Email</label>\r\n        <input\r\n          type=\"email\"\r\n          value={Email}\r\n          required\r\n          onChange={(e) => setEmail(e.currentTarget.value)}\r\n        />\r\n        <label>Password</label>\r\n        <input\r\n          type=\"password\"\r\n          value={PW}\r\n          required\r\n          onChange={(e) => setPW(e.currentTarget.value)}\r\n        />\r\n        {ErrorMsg != \"\" && <p>{ErrorMsg}</p>}\r\n        <button onClick={(e) => SingInFunc(e)}>Sign In</button>\r\n        <button\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            navigate(\"/register\");\r\n          }}\r\n        >\r\n          Sign Up\r\n        </button>\r\n      </form>\r\n    </LoginDiv>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\jjong\\Desktop\\React\\client\\src\\Component\\User\\Register.js",["164","165"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport firebase from \"../../firebase.js\";\r\nimport axios from \"axios\";\r\n\r\nimport { LoginDiv } from \"../../Style/UserCSS.js\";\r\n\r\nfunction Register() {\r\n  const [Name, setName] = useState(\"\");\r\n  const [Email, setEmail] = useState(\"\");\r\n  const [PW, setPW] = useState(\"\");\r\n  const [PWConfirm, setPWConfirm] = useState(\"\");\r\n\r\n  const [NameCheck, setNameCheck] = useState(false);\r\n  const [NameInfo, setNameInfo] = useState(\"\");\r\n\r\n  const user = useSelector((state) => state.user);\r\n  let navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (user.accessToken) {\r\n      navigate(\"/\");\r\n    }\r\n  }, []);\r\n\r\n  const RefisterFunc = async (e) => {\r\n;\r\n    e.preventDefault();\r\n    if (!(Name && Email && PW && PWConfirm)) {\r\n      return alert(\"Please fill in all fields.\");\r\n    }\r\n    if (PW != PWConfirm) {\r\n      return alert(\"Passwords must match.\");\r\n    }\r\n    if (!NameCheck) {\r\n      return alert(\"Please check your nickname.\");\r\n    }\r\n    let createdUser = await firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(Email, PW)\r\n\r\n      \r\n\r\n    await createdUser.user.updateProfile({\r\n      displayName: Name,\r\n      photoURL:\r\n        \"https://kr.object.ncloudstorage.com/react-community/user/profile.png\",\r\n    });\r\n\r\n    console.log(createdUser.user);                                                    ////////\r\n\r\n    let body = {\r\n      email: createdUser.user.multiFactor.user.email,\r\n      displayName: createdUser.user.multiFactor.user.displayName,\r\n      uid: createdUser.user.multiFactor.user.uid,\r\n      photoURL:\r\n        \"https://kr.object.ncloudstorage.com/react-community/user/profile.png\",\r\n    };\r\n    \r\n    axios.post(\"/api/user/register\", body).then((response) => {\r\n  \r\n      if (response.data.success) {\r\n        \r\n        navigate(\"/login\");\r\n      } else {\r\n        \r\n        return alert(\"registration failed.\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const NameCheckFunc = async (e) => {\r\n    e.preventDefault();\r\n    if (!Name) {\r\n      return alert(\"Please enter your Username\");\r\n    }\r\n\r\n    let body = {\r\n      dispalyName: Name,\r\n    };\r\n\r\n    await axios.post(\"/api/user/namecheck\", body).then((response) => {\r\n      if (response.data.success) {\r\n        if (response.data.check) {\r\n          setNameCheck(true);\r\n          setNameInfo(\"Available Username.\");\r\n        } else {\r\n          setNameInfo(\"This Username already registered.\");\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n  return (\r\n    <LoginDiv>\r\n      <form>\r\n        <label>Username</label>\r\n        <input\r\n          type=\"name\"\r\n          value={Name}\r\n          onChange={(e) => setName(e.currentTarget.value)}\r\n          disabled={NameCheck}\r\n        />\r\n        {NameInfo}\r\n        <button onClick={(e) => NameCheckFunc(e)}>Username Checks</button>\r\n        <label>Email</label>\r\n        <input\r\n          type=\"email\"\r\n          value={Email}\r\n          onChange={(e) => setEmail(e.currentTarget.value)}\r\n        />\r\n        <label>Password</label>\r\n        <input\r\n          type=\"password\"\r\n          value={PW}\r\n          minLength={8}\r\n          onChange={(e) => setPW(e.currentTarget.value)}\r\n        />\r\n        <label>Confirm password</label>\r\n        <input\r\n          type=\"password\"\r\n          value={PWConfirm}\r\n          minLength={8}\r\n          onChange={(e) => setPWConfirm(e.currentTarget.value)}\r\n        />\r\n        <button onClick={(e) => RefisterFunc(e)}>\r\n          Sign Up\r\n        </button>\r\n      </form>\r\n    </LoginDiv>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","C:\\Users\\jjong\\Desktop\\React\\client\\src\\Component\\User\\MyPage.js",["166"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Avatar from \"react-avatar\";\r\nimport axios from \"axios\";\r\nimport firebase from \"../../firebase.js\";\r\nimport { MyPageDiv } from \"../../Style/UserCSS.js\";\r\n\r\nfunction MyPage() {\r\n  const user = useSelector((state) => state.user);\r\n  const navigate = useNavigate();\r\n\r\n  const [CurrentImage, setCurrentImage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (user.isLoading && !user.accessToken) {\r\n      navigate(\"/login\");\r\n    } else {\r\n      setCurrentImage(user.photoURL);\r\n    }\r\n  }, [user]);\r\n\r\n  const ImageUpload = (e) => {\r\n    var formData = new FormData();\r\n    formData.append(\"file\", e.target.files[0]);\r\n    axios.post(\"/api/user/profile/img\", formData).then((response) => {\r\n      setCurrentImage(response.data.filePath);\r\n    });\r\n  };\r\n\r\n  const SaveProfile = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await firebase.auth().currentUser.updateProfile({\r\n        photoURL: CurrentImage,\r\n      });\r\n    } catch (error) {\r\n      return alert(\"Save failed.\");\r\n    }\r\n    let body = {\r\n      photoURL: CurrentImage,\r\n      uid: user.uid,\r\n    };\r\n    axios.post(\"/api/user/profile/update\", body).then((response) => {\r\n      if (response.data.success) {\r\n        alert(\"Profile saved successfully.\");\r\n        window.location.reload();\r\n      } else {\r\n        return alert(\"Profile saving failed.\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <MyPageDiv style={{ width: \"100vw\", height: \"100vh\" }}>\r\n      <form\r\n        style={{\r\n          width: \"50%\",\r\n          margin: \"0 auto\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          marginTop: \"2rem\",\r\n        }}\r\n      >\r\n        <label>\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            style={{ display: \"none\" }}\r\n            onChange={(e) => ImageUpload(e)}\r\n          />\r\n          <Avatar\r\n            size=\"100\"\r\n            round={true}\r\n            src={CurrentImage}\r\n            style={{ border: \"1px solid #c6c6c6\", cursor: \"pointer\" }}\r\n          />\r\n        </label>\r\n        <button onClick={(e) => SaveProfile(e)}>Save</button>\r\n      </form>\r\n    </MyPageDiv>\r\n  );\r\n}\r\n\r\nexport default MyPage;\r\n","C:\\Users\\jjong\\Desktop\\React\\client\\src\\Component\\Post\\List.js",[],[],"C:\\Users\\jjong\\Desktop\\React\\client\\src\\Component\\Post\\ImageUpload.js",[],[],"C:\\Users\\jjong\\Desktop\\React\\client\\src\\Style\\UploadCSS.js",[],[],"C:\\Users\\jjong\\Desktop\\React\\client\\src\\Style\\PostDetailCSS.js",[],[],"C:\\Users\\jjong\\Desktop\\React\\client\\src\\Style\\UserCSS.js",[],[],"C:\\Users\\jjong\\Desktop\\React\\client\\src\\Component\\Reple\\RepleArea.js",[],[],"C:\\Users\\jjong\\Desktop\\React\\client\\src\\Style\\ListCSS.js",[],[],"C:\\Users\\jjong\\Desktop\\React\\client\\src\\Style\\RepleCSS.js",[],[],"C:\\Users\\jjong\\Desktop\\React\\client\\src\\Component\\Reple\\RepleList.js",["167","168"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport RepleContent from \"./RepleContent.js\";\r\n\r\nimport { RepleListDiv, RepleContentDiv } from \"../../Style/RepleCSS.js\";\r\n\r\nfunction RepleList(props) {\r\n  const [repleList, setrepleList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let body = {\r\n      postId: props.postId,\r\n    };\r\n    axios.post(\"/api/reple/getReple\", body).then((response) => {\r\n      if (response.data.success) {\r\n        setrepleList([...response.data.repleList]);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <RepleListDiv>\r\n      {repleList.map((reple, idx) => {\r\n        return <RepleContent reple={reple} key={idx} />;\r\n      })}\r\n    </RepleListDiv>\r\n  );\r\n}\r\n\r\nexport default RepleList;\r\n","C:\\Users\\jjong\\Desktop\\React\\client\\src\\Component\\Reple\\RepleUpload.js",[],[],"C:\\Users\\jjong\\Desktop\\React\\client\\src\\Component\\Reple\\RepleContent.js",[],[],"C:\\Users\\jjong\\Desktop\\React\\client\\src\\firebase.js",[],[],"C:\\Users\\jjong\\Desktop\\React\\client\\src\\Component\\Post\\Detail.js",[],[],"C:\\Users\\jjong\\Desktop\\React\\client\\src\\Style\\SearchPageCSS.js",[],[],"C:\\Users\\jjong\\Desktop\\React\\client\\src\\Component\\SearchPage.js",["169","170"],[],"import React, { useState, useEffect } from \"react\";\r\nimport List from \"./Post/List.js\";\r\nimport axios from \"axios\";\r\nimport { DropdownButton, Dropdown } from \"react-bootstrap\";\r\nimport { GNBDiv, FooterDiv } from \"../Style/SearchPageCSS.js\";\r\n\r\nfunction SearchPage() {\r\n  const [PostList, setPostList] = useState([]);\r\n  const [Sort, setSort] = useState(\"Newest\");\r\n  const [SearchTerm, setSearchTerm] = useState(\"\");\r\n  const [Skip, setSkip] = useState(0);\r\n  const [LoadMore, setLoadMore] = useState(true);\r\n\r\n  const getLoadMore = () => {\r\n    let body = {\r\n      sort: Sort,\r\n      searchTerm: SearchTerm,\r\n      skip: Skip,\r\n    };\r\n    axios\r\n      .post(\"/api/post/list\", body)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          setPostList([...PostList, ...response.data.postList]);\r\n          setSkip(Skip + response.data.postList.length);\r\n          if (response.data.postList.length < 5) {\r\n            setLoadMore(false);\r\n          }\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const getPostList = () => {\r\n    setSkip(0);\r\n\r\n    let body = {\r\n      sort: Sort,\r\n      searchTerm: SearchTerm,\r\n      skip: 0,\r\n    };\r\n\r\n    axios\r\n      .post(\"/api/post/list\", body)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          setPostList([...response.data.postList]);\r\n          setSkip(response.data.postList.length);\r\n          if (response.data.postList.length < 5) {\r\n            setLoadMore(false);\r\n          }\r\n          if (response.data.postList.length == 0) {\r\n            setLoadMore(false);\r\n          }\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPostList();\r\n  }, [Sort]);\r\n\r\n  const SearchHandler = () => {\r\n    getPostList();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <GNBDiv>\r\n        <div className=\"search\">\r\n          <input\r\n            type=\"text\"\r\n            value={SearchTerm}\r\n            onChange={(e) => setSearchTerm(e.currentTarget.value)}\r\n            onKeyDown={(e) => {\r\n              if (e.keyCode === 13) SearchHandler();\r\n            }}\r\n          />\r\n          <button onClick={() => SearchHandler()}>\r\n            <i className=\"bi bi-search\"></i>\r\n          </button>\r\n        </div>\r\n\r\n        <DropdownButton variant=\"outline-dark\" title={Sort}>\r\n          <Dropdown.Item onClick={() => setSort(\"Newest\")}>\r\n          Sort by Newest\r\n          </Dropdown.Item>\r\n          <Dropdown.Item onClick={() => setSort(\"Popularity\")}>\r\n          Sort by Popularity\r\n          </Dropdown.Item>\r\n        </DropdownButton>\r\n      </GNBDiv>\r\n      <List PostList={PostList} />\r\n      {LoadMore && (\r\n        <FooterDiv>\r\n          <button\r\n            style={{ marginBottom: \"10vh\" }}\r\n            onClick={() => getLoadMore()}\r\n          >\r\n            Load More\r\n          </button>\r\n        </FooterDiv>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchPage;\r\n","C:\\Users\\jjong\\Desktop\\React\\client\\src\\Component\\HomePage.js",[],[],"C:\\Users\\jjong\\Desktop\\React\\client\\src\\Component\\Home\\BackgroundSlider.js",[],[],{"ruleId":"171","severity":1,"message":"172","line":22,"column":9,"nodeType":"173","messageId":"174","endLine":22,"endColumn":13},{"ruleId":"175","severity":1,"message":"176","line":33,"column":6,"nodeType":"177","endLine":33,"endColumn":8,"suggestions":"178"},{"ruleId":"175","severity":1,"message":"179","line":38,"column":6,"nodeType":"177","endLine":38,"endColumn":8,"suggestions":"180"},{"ruleId":"175","severity":1,"message":"181","line":25,"column":6,"nodeType":"177","endLine":25,"endColumn":12,"suggestions":"182"},{"ruleId":"175","severity":1,"message":"179","line":32,"column":6,"nodeType":"177","endLine":32,"endColumn":8,"suggestions":"183"},{"ruleId":"175","severity":1,"message":"184","line":40,"column":6,"nodeType":"177","endLine":40,"endColumn":8,"suggestions":"185"},{"ruleId":"186","severity":1,"message":"187","line":65,"column":19,"nodeType":"188","messageId":"189","endLine":65,"endColumn":21},{"ruleId":"175","severity":1,"message":"184","line":25,"column":6,"nodeType":"177","endLine":25,"endColumn":8,"suggestions":"190"},{"ruleId":"186","severity":1,"message":"187","line":33,"column":12,"nodeType":"188","messageId":"189","endLine":33,"endColumn":14},{"ruleId":"175","severity":1,"message":"181","line":21,"column":6,"nodeType":"177","endLine":21,"endColumn":12,"suggestions":"191"},{"ruleId":"171","severity":1,"message":"192","line":5,"column":24,"nodeType":"173","messageId":"174","endLine":5,"endColumn":39},{"ruleId":"175","severity":1,"message":"193","line":19,"column":6,"nodeType":"177","endLine":19,"endColumn":8,"suggestions":"194"},{"ruleId":"186","severity":1,"message":"195","line":54,"column":45,"nodeType":"188","messageId":"189","endLine":54,"endColumn":47},{"ruleId":"175","severity":1,"message":"196","line":66,"column":6,"nodeType":"177","endLine":66,"endColumn":12,"suggestions":"197"},"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["198"],"React Hook useEffect has a missing dependency: 'params.postNum'. Either include it or remove the dependency array.",["199"],"React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["200"],["201"],"React Hook useEffect has missing dependencies: 'navigate' and 'user.accessToken'. Either include them or remove the dependency array.",["202"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["203"],["204"],"'RepleContentDiv' is defined but never used.","React Hook useEffect has a missing dependency: 'props.postId'. Either include it or remove the dependency array.",["205"],"Expected '===' and instead saw '=='.","React Hook useEffect has a missing dependency: 'getPostList'. Either include it or remove the dependency array.",["206"],{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},{"desc":"209","fix":"213"},{"desc":"214","fix":"215"},{"desc":"214","fix":"216"},{"desc":"211","fix":"217"},{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},"Update the dependencies array to be: [dispatch]",{"range":"222","text":"223"},"Update the dependencies array to be: [params.postNum]",{"range":"224","text":"225"},"Update the dependencies array to be: [navigate, user]",{"range":"226","text":"227"},{"range":"228","text":"225"},"Update the dependencies array to be: [navigate, user.accessToken]",{"range":"229","text":"230"},{"range":"231","text":"230"},{"range":"232","text":"227"},"Update the dependencies array to be: [props.postId]",{"range":"233","text":"234"},"Update the dependencies array to be: [Sort, getPostList]",{"range":"235","text":"236"},[1010,1012],"[dispatch]",[987,989],"[params.postNum]",[718,724],"[navigate, user]",[819,821],[1157,1159],"[navigate, user.accessToken]",[746,748],[638,644],[542,544],"[props.postId]",[1764,1770],"[Sort, getPostList]"]