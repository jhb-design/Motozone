{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jjong\\\\Desktop\\\\React\\\\client\\\\src\\\\Component\\\\Post\\\\Upload.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport ImageUpload from \"./ImageUpload.js\";\nimport { UploadDiv, UploadForm, UploadButtonDiv } from \"../../Style/UploadCSS.js\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Upload(props) {\n  _s();\n  const [Title, setTitle] = useState(\"\");\n  const [Content, setContent] = useState(\"\");\n  const [Image, setImage] = useState(\"\");\n  let navigate = useNavigate();\n  const user = useSelector(state => state.user);\n  useEffect(() => {\n    if (user.isLoading && !user.accessToken) {\n      alert(\"로그인한 회원만 글을 작성할 수 있습니다.\");\n      navigate(\"/login\");\n    }\n  }, [user]);\n  const onSubmit = e => {\n    e.preventDefault();\n    if (Title === \"\" || Content === \"\") {\n      return alert(\"모든 항목을 채워주세요!\");\n    }\n    let body = {\n      title: Title,\n      content: Content,\n      image: Image,\n      uid: user.uid\n    };\n    axios.post(\"/api/post/submit\", body).then(response => {\n      if (response.data.success) {\n        alert(\"글 작성이 완료되었습니다.\");\n        navigate(\"/\");\n      } else {\n        alert(\"글 작성에 실패하였습니다.\");\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(UploadDiv, {\n    children: /*#__PURE__*/_jsxDEV(UploadForm, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"label\",\n        children: \"\\uC81C\\uBAA9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"title\",\n        type: \"text\",\n        value: Title,\n        onChange: e => {\n          setTitle(e.currentTarget.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageUpload, {\n        setImage: setImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"content\",\n        children: \"\\uB0B4\\uC6A9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"content\",\n        value: Content,\n        onChange: e => {\n          setContent(e.currentTarget.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UploadButtonDiv, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            onSubmit(e);\n          },\n          children: \"\\uC81C\\uCD9C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(Upload, \"rUEHW4xPyQ3+CYJ3gkyKb6eSz8w=\", false, function () {\n  return [useNavigate, useSelector];\n});\n_c = Upload;\nexport default Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useSelector","ImageUpload","UploadDiv","UploadForm","UploadButtonDiv","axios","jsxDEV","_jsxDEV","Upload","props","_s","Title","setTitle","Content","setContent","Image","setImage","navigate","user","state","isLoading","accessToken","alert","onSubmit","e","preventDefault","body","title","content","image","uid","post","then","response","data","success","catch","err","console","log","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","type","value","onChange","currentTarget","onClick","_c","$RefreshReg$"],"sources":["C:/Users/jjong/Desktop/React/client/src/Component/Post/Upload.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ImageUpload from \"./ImageUpload.js\";\r\nimport {\r\n  UploadDiv,\r\n  UploadForm,\r\n  UploadButtonDiv,\r\n} from \"../../Style/UploadCSS.js\";\r\nimport axios from \"axios\";\r\n\r\nfunction Upload(props) {\r\n  const [Title, setTitle] = useState(\"\");\r\n  const [Content, setContent] = useState(\"\");\r\n  const [Image, setImage] = useState(\"\");\r\n\r\n  let navigate = useNavigate();\r\n  const user = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    if (user.isLoading && !user.accessToken) {\r\n      alert(\"로그인한 회원만 글을 작성할 수 있습니다.\");\r\n      navigate(\"/login\");\r\n    }\r\n  }, [user]);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (Title === \"\" || Content === \"\") {\r\n      return alert(\"모든 항목을 채워주세요!\");\r\n    }\r\n\r\n    let body = {\r\n      title: Title,\r\n      content: Content,\r\n      image: Image,\r\n      uid: user.uid,\r\n    };\r\n\r\n    axios\r\n      .post(\"/api/post/submit\", body)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          alert(\"글 작성이 완료되었습니다.\");\r\n          navigate(\"/\");\r\n        } else {\r\n          alert(\"글 작성에 실패하였습니다.\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <UploadDiv>\r\n      <UploadForm>\r\n        <label htmlFor=\"label\">제목</label>\r\n        <input\r\n          id=\"title\"\r\n          type=\"text\"\r\n          value={Title}\r\n          onChange={(e) => {\r\n            setTitle(e.currentTarget.value);\r\n          }}\r\n        />\r\n        <ImageUpload setImage={setImage} />\r\n        <label htmlFor=\"content\">내용</label>\r\n        <textarea\r\n          id=\"content\"\r\n          value={Content}\r\n          onChange={(e) => {\r\n            setContent(e.currentTarget.value);\r\n          }}\r\n        />\r\n        <UploadButtonDiv>\r\n          <button\r\n            onClick={(e) => {\r\n              onSubmit(e);\r\n            }}\r\n          >\r\n            제출\r\n          </button>\r\n        </UploadButtonDiv>\r\n      </UploadForm>\r\n    </UploadDiv>\r\n  );\r\n}\r\n\r\nexport default Upload;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}