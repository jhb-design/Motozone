{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jjong\\\\Desktop\\\\React\\\\client\\\\src\\\\Component\\\\Reple\\\\RepleUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { RepleUploadDiv } from \"../../Style/RepleCSS.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RepleUpload(props) {\n  _s();\n  const [Reple, setReple] = useState(\"\");\n  const user = useSelector(state => state.user);\n  const SubmitHandler = e => {\n    e.preventDefault();\n    if (!Reple) {\n      return alert(\"Please fill in the content field.\");\n    }\n    let body = {\n      reple: Reple,\n      uid: user.uid,\n      postId: props.postId\n    };\n    axios.post(\"/api/reple/submit\", body).then(response => {\n      if (response.data.success) {\n        alert(\"Your comment has been successful.\");\n        window.location.reload();\n      } else {\n        alert(\"Writing a comment failed.\");\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(RepleUploadDiv, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: Reple,\n        onChange: e => {\n          setReple(e.currentTarget.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          SubmitHandler(e);\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(RepleUpload, \"7p3UhLCEGx7uQlYgEETnxIHlJGE=\", false, function () {\n  return [useSelector];\n});\n_c = RepleUpload;\nexport default RepleUpload;\nvar _c;\n$RefreshReg$(_c, \"RepleUpload\");","map":{"version":3,"names":["React","useState","axios","useSelector","RepleUploadDiv","jsxDEV","_jsxDEV","RepleUpload","props","_s","Reple","setReple","user","state","SubmitHandler","e","preventDefault","alert","body","reple","uid","postId","post","then","response","data","success","window","location","reload","children","type","value","onChange","currentTarget","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/jjong/Desktop/React/client/src/Component/Reple/RepleUpload.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { RepleUploadDiv } from \"../../Style/RepleCSS.js\";\r\nfunction RepleUpload(props) {\r\n  const [Reple, setReple] = useState(\"\");\r\n  const user = useSelector((state) => state.user);\r\n\r\n  const SubmitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!Reple) {\r\n      return alert(\"Please fill in the content field.\");\r\n    }\r\n    let body = {\r\n      reple: Reple,\r\n      uid: user.uid,\r\n      postId: props.postId,\r\n    };\r\n\r\n    axios.post(\"/api/reple/submit\", body).then((response) => {\r\n      if (response.data.success) {\r\n        alert(\"Your comment has been successful.\");\r\n        window.location.reload();\r\n      } else {\r\n        alert(\"Writing a comment failed.\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <RepleUploadDiv>\r\n      <form>\r\n        <input\r\n          type=\"text\"\r\n          value={Reple}\r\n          onChange={(e) => {\r\n            setReple(e.currentTarget.value);\r\n          }}\r\n        />\r\n        <button\r\n          onClick={(e) => {\r\n            SubmitHandler(e);\r\n          }}\r\n        >\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </RepleUploadDiv>\r\n  );\r\n}\r\n\r\nexport default RepleUpload;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AAEzC,SAASC,cAAc,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACzD,SAASC,WAAWA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMW,IAAI,GAAGT,WAAW,CAAEU,KAAK,IAAKA,KAAK,CAACD,IAAI,CAAC;EAE/C,MAAME,aAAa,GAAIC,CAAC,IAAK;IAC3BA,CAAC,CAACC,cAAc,EAAE;IAElB,IAAI,CAACN,KAAK,EAAE;MACV,OAAOO,KAAK,CAAC,mCAAmC,CAAC;IACnD;IACA,IAAIC,IAAI,GAAG;MACTC,KAAK,EAAET,KAAK;MACZU,GAAG,EAAER,IAAI,CAACQ,GAAG;MACbC,MAAM,EAAEb,KAAK,CAACa;IAChB,CAAC;IAEDnB,KAAK,CAACoB,IAAI,CAAC,mBAAmB,EAAEJ,IAAI,CAAC,CAACK,IAAI,CAAEC,QAAQ,IAAK;MACvD,IAAIA,QAAQ,CAACC,IAAI,CAACC,OAAO,EAAE;QACzBT,KAAK,CAAC,mCAAmC,CAAC;QAC1CU,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;MAC1B,CAAC,MAAM;QACLZ,KAAK,CAAC,2BAA2B,CAAC;MACpC;IACF,CAAC,CAAC;EACJ,CAAC;EAED,oBACEX,OAAA,CAACF,cAAc;IAAA0B,QAAA,eACbxB,OAAA;MAAAwB,QAAA,gBACExB,OAAA;QACEyB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEtB,KAAM;QACbuB,QAAQ,EAAGlB,CAAC,IAAK;UACfJ,QAAQ,CAACI,CAAC,CAACmB,aAAa,CAACF,KAAK,CAAC;QACjC;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACF,eACFhC,OAAA;QACEiC,OAAO,EAAGxB,CAAC,IAAK;UACdD,aAAa,CAACC,CAAC,CAAC;QAClB,CAAE;QAAAe,QAAA,EACH;MAED;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACJ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACQ;AAErB;AAAC7B,EAAA,CA9CQF,WAAW;EAAA,QAELJ,WAAW;AAAA;AAAAqC,EAAA,GAFjBjC,WAAW;AAgDpB,eAAeA,WAAW;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}